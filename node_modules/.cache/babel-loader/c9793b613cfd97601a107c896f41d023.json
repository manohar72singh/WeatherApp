{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoh\\\\Desktop\\\\Assignment\\\\weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport { weatherForecast } from './Api';\nimport Loading from './components/Loading';\nimport Weather from './components/Weather';\nimport { getCityWeather } from './Redux/weatherSlics';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // const dispatch = useDispatch();\n  // const data = useSelector((state)=>state.cityWeather)\n  // useEffect(()=>{\n  //   console.log(data);\n  // },[])\n  const [state, setState] = useState({\n    value: '',\n    current: {},\n    weekInfo: [],\n    loading: false,\n    error: false\n  });\n  const handleInput = e => {\n    setState({\n      ...state,\n      value: e.target.value\n    });\n  };\n  const handleSearchCity = e => {\n    e.preventDefault();\n    setState({\n      ...state,\n      loading: true\n    });\n    fetch(weatherForecast(state.value));\n    //dispatch(getCityWeather(state.value))\n    console.log(\"dats\", data).then(response => response.json()).then(result => {\n      console.log(result);\n      const data = result;\n      const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'Nocvember', 'December'];\n      const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'];\n      const currentDate = new Date();\n      const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${months[currentDate.getMonth()]}`;\n      const sunset = new Date(data.list[0].sunset * 1000).toLocaleTimeString().slice(0, 4);\n      const sunrise = new Date(data.list[0].sunrise * 1000).toLocaleTimeString().slice(0, 4);\n      const current = {\n        city: data.city.name,\n        country: data.city.country,\n        date,\n        population: data.city.population,\n        desc: data.list[0].weather[0].description,\n        main: data.list[0].weather[0].main,\n        icon: data.list[0].weather[0].icon,\n        temp: data.list[0].temp.day,\n        hTemp: data.list[0].temp.max,\n        lTemp: data.list[0].temp.min,\n        sunrise,\n        sunset,\n        clouds: data.list[0].clouds,\n        humidity: data.list[0].humidity,\n        wind: data.list[0].speed,\n        pressure: data.list[0].pressure\n      };\n      const weekData = data.list;\n      const weekInfo = weekData.map((data, index) => {\n        return {\n          key: index,\n          main: data.weather[0].main,\n          day: new Date(data.dt * 1000).toLocaleString('en-US', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          }).slice(0, 3),\n          desc: data.weather[0].description,\n          icon: data.weather[0].icon,\n          hTemp: data.temp.max,\n          lTemp: data.temp.min\n        };\n      });\n      setState({\n        ...state,\n        current,\n        weekInfo,\n        loading: false,\n        error: false\n      });\n    }).catch(error => {\n      console.log(error);\n      setState({\n        ...state,\n        loading: false,\n        error: true,\n        current: {},\n        weekInfo: []\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      value: state.value,\n      data: state,\n      showResult: (state.weatherInfo || state.error) && true,\n      change: handleInput,\n      submit: handleSearchCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), state.loading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.current.country !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather\",\n        children: /*#__PURE__*/_jsxDEV(Weather, {\n          today: state.current,\n          weekly: state.weekInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) : state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error__loc\",\n        children: \"Sorry! we donot have any information on specified location.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"42yEgLQXS74FJ0JtC9abI+aoruA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Search","weatherForecast","Loading","Weather","getCityWeather","useDispatch","useSelector","App","state","setState","value","current","weekInfo","loading","error","handleInput","e","target","handleSearchCity","preventDefault","fetch","console","log","data","then","response","json","result","months","days","currentDate","Date","date","getDay","getDate","getMonth","sunset","list","toLocaleTimeString","slice","sunrise","city","name","country","population","desc","weather","description","main","icon","temp","day","hTemp","max","lTemp","min","clouds","humidity","wind","speed","pressure","weekData","map","index","key","dt","toLocaleString","weekday","year","month","catch","weatherInfo","undefined"],"sources":["C:/Users/manoh/Desktop/Assignment/weather/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport Search from './components/Search'\nimport {weatherForecast} from './Api'\nimport Loading from './components/Loading';\nimport Weather from './components/Weather';\nimport { getCityWeather } from './Redux/weatherSlics';\nimport { useDispatch, useSelector } from 'react-redux';\nfunction App() {\n  // const dispatch = useDispatch();\n  // const data = useSelector((state)=>state.cityWeather)\n  // useEffect(()=>{\n  //   console.log(data);\n  // },[])\n  const [state, setState] = useState({\n    value: '',\n    current: {\n    },\n    weekInfo: [],\n    loading: false,\n    error: false,\n  })\n  const handleInput =(e)=>{\n      setState({\n        ...state,\n        value: e.target.value,\n      })\n  };\n\n  const handleSearchCity=(e)=>{\n      e.preventDefault();\n      setState({\n        ...state,\n        loading:true,\n      })\n  \n\n   fetch(weatherForecast(state.value))\n       //dispatch(getCityWeather(state.value))\n      console.log(\"dats\",data)\n  .then(response=>response.json())\n  .then(result=>{\n    console.log(result)\n    const data = result\n    const months = [\n      'January',\n      'February',\n      'March',\n      'April',\n      'May',\n      'June',\n      'July',\n      'August',\n      'September',\n      'October',\n      'Nocvember',\n      'December',\n    ]\n    const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    const currentDate = new Date();\n    const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n      months[currentDate.getMonth()]\n    }`;\n    const sunset = new Date(data.list[0].sunset*1000).toLocaleTimeString().slice(0, 4)\n    const sunrise = new Date(data.list[0].sunrise*1000).toLocaleTimeString().slice(0, 4)\n\n    const current ={\n      city: data.city.name,\n      country: data.city.country,\n      date,\n      population: data.city.population,\n        desc: data.list[0].weather[0].description,\n        main: data.list[0].weather[0].main,\n        icon: data.list[0].weather[0].icon,\n        temp: data.list[0].temp.day,\n        hTemp: data.list[0].temp.max,\n        lTemp: data.list[0].temp.min,\n        sunrise,\n        sunset,\n        clouds: data.list[0].clouds,\n        humidity: data.list[0].humidity,\n        wind: data.list[0].speed,\n        pressure: data.list[0].pressure,\n      }\n\n      const weekData = data.list\n      const weekInfo = weekData.map((data, index)=>{\n        return{\n          key:index,\n          main: data.weather[0].main,\n          day: new Date(data.dt * 1000).toLocaleString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }).slice(0,3),\n          desc: data.weather[0].description,\n          icon: data.weather[0].icon,\n          hTemp: data.temp.max,\n          lTemp: data.temp.min,\n        }\n      })\n      setState({\n        ...state,\n        current,\n        weekInfo,\n        loading: false,\n        error: false,\n      }) \n  })\n  .catch(error=>{\n    console.log(error);\n    setState({\n      ...state,\n      loading: false,\n      error: true,\n      current: {},\n      weekInfo: [],\n    })\n  })\n}\n  return (\n    <>\n      <Search \n      value={state.value}\n      data={state}\n      showResult={(state.weatherInfo || state.error) && true}\n      change={handleInput}\n      submit={handleSearchCity}\n      />\n      {\n        state.loading === true ? \n        <Loading /> : \n        <div>\n          {\n            state.current.country !== undefined ?\n            <div className='weather'>\n              <Weather today={state.current} weekly={state.weekInfo}/>\n            </div> :\n            state.error ?\n            <p className='error__loc'>Sorry! we donot have any information on specified location.</p> :\n            <div>\n\n            </div>\n          }\n        </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}