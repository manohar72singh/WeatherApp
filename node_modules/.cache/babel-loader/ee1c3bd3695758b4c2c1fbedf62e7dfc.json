{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\manoh\\\\Desktop\\\\Assignment\\\\weather\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport Search from './components/Search';\nimport { weatherForecast } from './Api';\nimport Loading from './components/Loading';\nimport Weather from './components/Weather';\nimport { getCityWeather } from './Redux/weatherSlics';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const dispatch = useDispatch();\n  const data = useSelector(state => state.cityWeather);\n  useEffect(() => {\n    console.log(data);\n  }, []);\n  const [state, setState] = useState({\n    value: '',\n    current: {},\n    weekInfo: [],\n    loading: false,\n    error: false\n  });\n  const handleInput = e => {\n    setState({\n      ...state,\n      value: e.target.value\n    });\n  };\n  const handleSearchCity = e => {\n    e.preventDefault();\n    setState({\n      ...state,\n      loading: true\n    });\n\n    // fetch(weatherForecast(state.value))\n    dispatch(getCityWeather(state.value));\n    console.log(\"dats\", data);\n    // .then(response=>response.json())\n    // .then(result=>{\n    //   console.log(result)\n    //   const data = result\n    //   const months = [\n    //     'January',\n    //     'February',\n    //     'March',\n    //     'April',\n    //     'May',\n    //     'June',\n    //     'July',\n    //     'August',\n    //     'September',\n    //     'October',\n    //     'Nocvember',\n    //     'December',\n    //   ]\n    //   const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n    //   const currentDate = new Date();\n    //   const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n    //     months[currentDate.getMonth()]\n    //   }`;\n    //   const sunset = new Date(data.list[0].sunset*1000).toLocaleTimeString().slice(0, 4)\n    //   const sunrise = new Date(data.list[0].sunrise*1000).toLocaleTimeString().slice(0, 4)\n\n    //   const current ={\n    //     city: data.city.name,\n    //     country: data.city.country,\n    //     date,\n    //     population: data.city.population,\n    //       desc: data.list[0].weather[0].description,\n    //       main: data.list[0].weather[0].main,\n    //       icon: data.list[0].weather[0].icon,\n    //       temp: data.list[0].temp.day,\n    //       hTemp: data.list[0].temp.max,\n    //       lTemp: data.list[0].temp.min,\n    //       sunrise,\n    //       sunset,\n    //       clouds: data.list[0].clouds,\n    //       humidity: data.list[0].humidity,\n    //       wind: data.list[0].speed,\n    //       pressure: data.list[0].pressure,\n    //     }\n\n    //     const weekData = data.list\n    //     const weekInfo = weekData.map((data, index)=>{\n    //       return{\n    //         key:index,\n    //         main: data.weather[0].main,\n    //         day: new Date(data.dt * 1000).toLocaleString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }).slice(0,3),\n    //         desc: data.weather[0].description,\n    //         icon: data.weather[0].icon,\n    //         hTemp: data.temp.max,\n    //         lTemp: data.temp.min,\n    //       }\n    //     })\n    //     setState({\n    //       ...state,\n    //       current,\n    //       weekInfo,\n    //       loading: false,\n    //       error: false,\n    //     }) \n    // })\n    // .catch(error=>{\n    //   console.log(error);\n    //   setState({\n    //     ...state,\n    //     loading: false,\n    //     error: true,\n    //     current: {},\n    //     weekInfo: [],\n    //   })\n    // })\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Search, {\n      value: state.value,\n      data: state,\n      showResult: (state.weatherInfo || state.error) && true,\n      change: handleInput,\n      submit: handleSearchCity\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), state.loading === true ? /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: state.current.country !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather\",\n        children: /*#__PURE__*/_jsxDEV(Weather, {\n          today: state.current,\n          weekly: state.weekInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }, this) : state.error ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error__loc\",\n        children: \"Sorry! we donot have any information on specified location.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"A4fuc+iq6i/kpJl9LRJlwIIHopc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Search","weatherForecast","Loading","Weather","getCityWeather","useDispatch","useSelector","App","dispatch","data","state","cityWeather","console","log","setState","value","current","weekInfo","loading","error","handleInput","e","target","handleSearchCity","preventDefault","weatherInfo","country","undefined"],"sources":["C:/Users/manoh/Desktop/Assignment/weather/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './App.css';\nimport Search from './components/Search'\nimport {weatherForecast} from './Api'\nimport Loading from './components/Loading';\nimport Weather from './components/Weather';\nimport { getCityWeather } from './Redux/weatherSlics';\nimport { useDispatch, useSelector } from 'react-redux';\nfunction App() {\n  const dispatch = useDispatch();\n  const data = useSelector((state)=>state.cityWeather)\n  useEffect(()=>{\n    console.log(data);\n  },[])\n  const [state, setState] = useState({\n    value: '',\n    current: {\n    },\n    weekInfo: [],\n    loading: false,\n    error: false,\n  })\n  const handleInput =(e)=>{\n      setState({\n        ...state,\n        value: e.target.value,\n      })\n  };\n\n  const handleSearchCity=(e)=>{\n      e.preventDefault();\n      setState({\n        ...state,\n        loading:true,\n      })\n  \n\n  // fetch(weatherForecast(state.value))\n      dispatch(getCityWeather(state.value))\n      console.log(\"dats\",data)\n  // .then(response=>response.json())\n  // .then(result=>{\n  //   console.log(result)\n  //   const data = result\n  //   const months = [\n  //     'January',\n  //     'February',\n  //     'March',\n  //     'April',\n  //     'May',\n  //     'June',\n  //     'July',\n  //     'August',\n  //     'September',\n  //     'October',\n  //     'Nocvember',\n  //     'December',\n  //   ]\n  //   const days = ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n  //   const currentDate = new Date();\n  //   const date = `${days[currentDate.getDay()]} ${currentDate.getDate()} ${\n  //     months[currentDate.getMonth()]\n  //   }`;\n  //   const sunset = new Date(data.list[0].sunset*1000).toLocaleTimeString().slice(0, 4)\n  //   const sunrise = new Date(data.list[0].sunrise*1000).toLocaleTimeString().slice(0, 4)\n\n  //   const current ={\n  //     city: data.city.name,\n  //     country: data.city.country,\n  //     date,\n  //     population: data.city.population,\n  //       desc: data.list[0].weather[0].description,\n  //       main: data.list[0].weather[0].main,\n  //       icon: data.list[0].weather[0].icon,\n  //       temp: data.list[0].temp.day,\n  //       hTemp: data.list[0].temp.max,\n  //       lTemp: data.list[0].temp.min,\n  //       sunrise,\n  //       sunset,\n  //       clouds: data.list[0].clouds,\n  //       humidity: data.list[0].humidity,\n  //       wind: data.list[0].speed,\n  //       pressure: data.list[0].pressure,\n  //     }\n\n  //     const weekData = data.list\n  //     const weekInfo = weekData.map((data, index)=>{\n  //       return{\n  //         key:index,\n  //         main: data.weather[0].main,\n  //         day: new Date(data.dt * 1000).toLocaleString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }).slice(0,3),\n  //         desc: data.weather[0].description,\n  //         icon: data.weather[0].icon,\n  //         hTemp: data.temp.max,\n  //         lTemp: data.temp.min,\n  //       }\n  //     })\n  //     setState({\n  //       ...state,\n  //       current,\n  //       weekInfo,\n  //       loading: false,\n  //       error: false,\n  //     }) \n  // })\n  // .catch(error=>{\n  //   console.log(error);\n  //   setState({\n  //     ...state,\n  //     loading: false,\n  //     error: true,\n  //     current: {},\n  //     weekInfo: [],\n  //   })\n  // })\n}\n  return (\n    <>\n      <Search \n      value={state.value}\n      data={state}\n      showResult={(state.weatherInfo || state.error) && true}\n      change={handleInput}\n      submit={handleSearchCity}\n      />\n      {\n        state.loading === true ? \n        <Loading /> : \n        <div>\n          {\n            state.current.country !== undefined ?\n            <div className='weather'>\n              <Weather today={state.current} weekly={state.weekInfo}/>\n            </div> :\n            state.error ?\n            <p className='error__loc'>Sorry! we donot have any information on specified location.</p> :\n            <div>\n\n            </div>\n          }\n        </div>\n      }\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}